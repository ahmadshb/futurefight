version: '3.7'

services:
  shadowland:
    container_name: shadowland-micro-service
    build: ./shadowland-micro-service/.
    command: mvn spring-boot:run -Dagentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:4000
    volumes:
      - ./shadowland-micro-service:/shadowland-micro-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "4000:4000"
    networks:
      - your-network
    links:
      - namingserver
  character:
    container_name: character-micro-service
    build: ./characters/.
    command: mvn spring-boot:run -Dagentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:4100
    volumes:
      - ./characters:/characters
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "4100:4100"
    networks:
      - your-network
    links:
      - namingserver
  api-server:
    container_name: api-server-service
    build: ./api-server/.
    command: mvn spring-boot:run -Dagentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8765
    volumes:
      - ./api-server:/api-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8765:8765"
    networks:
      - your-network
    links:
      - namingserver
  react-client:
    container_name: react-client
    stdin_open: true # needed because of bug...https://github.com/facebook/create-react-app/issues/8688
    build:
      context: ./react-client/.
    volumes:
      - ./react-client:/client
    environment:
      env_file: .env.docker
    ports:
      - "3000:3000"
    networks:
      - your-network
    links:
      - shadowland
      - character
  namingserver:
    container_name: naming-server-service
    build: ./naming-server/.
    command: mvn spring-boot:run -Dagentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8761
    volumes:
      - ./naming-server:/naming-server
    ports:
      - "8761:8761"
    networks:
      - your-network
    links:
      - postgres
  postgress-admin: #localhost:5050
    container_name: postgress-admin
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
#    volumes:
#      - postgress-admin:/root/.pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    links:
      - postgres
    networks:
      - your-network
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: something_else
      POSTGRES_DB: FutureFight
#      PGDATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - your-network
    restart: unless-stopped
volumes:
  pgdata:
networks:
   your-network:
    name: futurefight
